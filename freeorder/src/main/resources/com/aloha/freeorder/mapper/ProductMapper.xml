<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aloha.freeorder.mapper.ProductMapper">

    <!-- 조회 -->
    <select id="select" resultType="Product">
        SELECT *
        FROM products
        WHERE id = #{id}

    </select>

    <!-- 목록 조회 -->
    <select id="allList" resultType="Product">
        SELECT 
            p.CATEGORY_ID,
            c.NAME AS CATEGORY_NAME,
            p.ID AS PRODUCT_ID,
            p.NAME,
            p.DESCRIPTION,
            p.PRICE,
            p.STOCK_CHECK,
            p.STOCK,
            IF(oc.ORDER_COUNT >= 100, TRUE, FALSE) AS IS_POPULAR,
            IF(p.CREATED_AT >= NOW() - INTERVAL 2 WEEK, TRUE, FALSE) AS IS_NEW,
            IF(rp.PRODUCTS_ID IS NOT NULL, TRUE, FALSE) AS IS_RECOMMENDED
        FROM PRODUCTS p
        JOIN CATEGORIES c ON p.CATEGORY_ID = c.ID
        LEFT JOIN (
            SELECT 
                oi.PRODUCTS_ID,
                COUNT(oi.ID) AS ORDER_COUNT
            FROM ORDER_ITEMS oi
            JOIN ORDERS o ON oi.ORDERS_ID = o.ID
            WHERE o.STATUS = 'PAID'  
            GROUP BY oi.PRODUCTS_ID
        ) oc ON p.ID = oc.PRODUCTS_ID
        LEFT JOIN RECOMMENDED_PRODUCTS rp ON p.ID = rp.PRODUCTS_ID
        ORDER BY p.seq ASC;
    </select>

    <!-- 목록 조회 - category_id -->
    <select id="listByCate" resultType="Product">
        SELECT 
            p.CATEGORY_ID,
            c.NAME AS CATEGORY_NAME,
            p.ID AS PRODUCT_ID,
            p.NAME,
            p.DESCRIPTION,
            p.PRICE,
            p.STOCK_CHECK,
            p.STOCK,
            IF(oc.ORDER_COUNT >= 100, TRUE, FALSE) AS IS_POPULAR,
            IF(p.CREATED_AT >= NOW() - INTERVAL 2 WEEK, TRUE, FALSE) AS IS_NEW,
            IF(rp.PRODUCTS_ID IS NOT NULL, TRUE, FALSE) AS IS_RECOMMENDED
        FROM PRODUCTS p
        JOIN CATEGORIES c ON p.CATEGORY_ID = c.ID
        LEFT JOIN (
            SELECT 
                oi.PRODUCTS_ID,
                COUNT(oi.ID) AS ORDER_COUNT
            FROM ORDER_ITEMS oi
            JOIN ORDERS o ON oi.ORDERS_ID = o.ID
            WHERE o.STATUS = 'PAID'  
            GROUP BY oi.PRODUCTS_ID
        ) oc ON p.ID = oc.PRODUCTS_ID
        LEFT JOIN RECOMMENDED_PRODUCTS rp ON p.ID = rp.PRODUCTS_ID
        WHERE p.CATEGORY_ID = ${id}  
        ORDER BY p.seq ASC;
    </select>

    <!-- 등록 -->
    <insert id="insert">
        INSERT INTO products ( id, name, category_id, price, seq )
        VALUES ( #{id}, #{name}, #{categoryId}, #{price}, #{seq} )
    </insert>
        <!-- 추천메뉴 체크시 추천메뉴 등록 [reson 컬럼은 차후에]-->
        <insert id="insertRecommend">
            INSERT INTO RECOMMENDED_PRODUCTS (ID, PRODUCTS_ID )
            VALUES (UUID(), #{id} );
        </insert>
        <!-- 추천 메뉴 해제시 추천메뉴 삭제 -->
        <delete id="deleteRecommend">
            DELETE FROM RECOMMENDED_PRODUCTS
            WHERE PRODUCTS_ID = ${id}
        </delete>
    <!-- 수정 -->
    <update id="update">
        UPDATE products
           SET name = #{name}
              ,category_id = #{categoryId}
              ,price = #{price}
              ,stock_check = #{stockCheck}
              ,seq = #{seq}
              ,updated_at = now()
        WHERE id = #{id}
    </update>

    <!-- 삭제 -->
    <delete id="delete">
        DELETE FROM products
        WHERE id = #{id}
    </delete>
    
</mapper>