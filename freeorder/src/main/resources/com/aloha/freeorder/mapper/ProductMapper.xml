<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aloha.freeorder.mapper.ProductMapper">
    <resultMap type="Product" id="productMap">
        <id property="id" column="id" />

        <result property="id" column="id" />
        <result property="optionsId" column="OPTIONS_ID" />
        <result property="name" column="NAME" />
        <result property="categoriesId" column="CATEGORIES_ID" />
        <result property="productImg" column="PRODUCT_IMG" />
        <result property="description" column="DESCRIPTION" />
        <result property="content" column="CONTENT" />
        <result property="price" column="PRICE" />
        <result property="stockCheck" column="STOCK_CHECK" />
        <result property="stock" column="STOCK" />
        <result property="seq" column="SEQ" />
        <result property="createdAt" column="CREATED_AT" />
        <result property="updatedAt" column="UPDATED_AT" />

        <association property="option" javaType="Option">
            <result property="id" column="OPTIONS_ID" />
            <result property="name" column="options_name" />
            <result property="stockCheck" column="stock_check" />
            <result property="stock" column="stock" />
            <result property="essential" column="essential" />
            <result property="selectMin" column="select_min" />
            <result property="selectMax" column="select_max" />
            <collection property="itemList" resultMap="itemMap"></collection>
        </association>
    </resultMap>

    <resultMap type="OptionItem" id="itemMap">
        <result property="id" column="option_items_id" />
        <result property="optionsId" column="options_id" />
        <result property="name" column="option_items_name" />
        <result property="price" column="option_items_price" />
        <result property="seq" column="option_items_seq" />
    </resultMap>

    <!-- 조회 -->
    <select id="select" resultMap="productMap">
        SELECT p.*
              ,o.id as options_id
              ,o.name as options_name
              ,o.stock_check
              ,o.stock
              ,o.essential
              ,o.select_min
              ,o.select_max
              ,oi.id as option_items_id
              ,oi.name as option_items_name
              ,oi.price as option_items_price
              ,oi.seq as option_items_seq
        FROM products p
        LEFT JOIN options o
            ON p.options_id = o.id
        LEFT OUTER JOIN option_items oi
            ON o.id = oi.options_id
        WHERE p.id = #{id}
        ORDER BY oi.seq ASC
    </select>

    <!-- 목록 조회 -->
    <select id="allList" resultType="Product">
        SELECT 
            p.ID,
            p.OPTIONS_ID,
            p.CATEGORIES_ID,
            c.NAME AS CATEGORY_NAME,
            p.ID AS PRODUCTS_ID,
            p.NAME,
            p.DESCRIPTION,
            p.PRICE,
            p.PRODUCT_IMG,
            p.STOCK_CHECK,
            p.STOCK,
            p.seq,
            IF(oc.ORDER_COUNT >= 100, TRUE, FALSE) AS IS_POPULAR,
            IF(p.CREATED_AT >= NOW() - INTERVAL 2 WEEK, TRUE, FALSE) AS IS_NEW,
            IF(rp.PRODUCTS_ID IS NOT NULL, TRUE, FALSE) AS IS_RECOMMENDED
        FROM PRODUCTS p
        LEFT JOIN CATEGORIES c ON p.CATEGORIES_ID = c.ID
        LEFT JOIN (
            SELECT 
                oi.PRODUCTS_ID,
                COUNT(oi.ID) AS ORDER_COUNT
            FROM ORDER_ITEMS oi
            JOIN ORDERS o ON oi.ORDERS_ID = o.ID
            WHERE o.STATUS = 'PAID'  
            GROUP BY oi.PRODUCTS_ID
        ) oc ON p.ID = oc.PRODUCTS_ID
        LEFT JOIN RECOMMENDED_PRODUCTS rp ON p.ID = rp.PRODUCTS_ID
        ORDER BY p.seq ASC;
    </select>

    <!-- 목록 조회 - categories_id -->
    <select id="listByCate" resultType="Product">
        SELECT 
            p.ID,
            p.OPTIONS_ID,
            p.CATEGORIES_ID,
            c.NAME AS CATEGORY_NAME,
            p.ID AS PRODUCTS_ID,
            p.NAME,
            p.DESCRIPTION,
            p.PRICE,
            p.PRODUCT_IMG,
            p.STOCK_CHECK,
            p.STOCK,
            p.seq,
            IF(oc.ORDER_COUNT >= 100, TRUE, FALSE) AS IS_POPULAR,
            IF(p.CREATED_AT >= NOW() - INTERVAL 2 WEEK, TRUE, FALSE) AS IS_NEW,
            IF(rp.PRODUCTS_ID IS NOT NULL, TRUE, FALSE) AS IS_RECOMMENDED
        FROM PRODUCTS p
        JOIN CATEGORIES c ON p.CATEGORIES_ID = c.ID
        LEFT JOIN (
            SELECT 
                oi.PRODUCTS_ID,
                COUNT(oi.ID) AS ORDER_COUNT
            FROM ORDER_ITEMS oi
            JOIN ORDERS o ON oi.ORDERS_ID = o.ID
            WHERE o.STATUS = 'PAID'  
            GROUP BY oi.PRODUCTS_ID
        ) oc ON p.ID = oc.PRODUCTS_ID
        LEFT JOIN RECOMMENDED_PRODUCTS rp ON p.ID = rp.PRODUCTS_ID
        WHERE p.CATEGORIES_ID = #{id}  
        ORDER BY p.seq ASC;
    </select>

    <!-- 등록 -->
    <insert id="insert">
        INSERT INTO products ( id, name, categories_id, options_id, price, description, product_img,seq )
        VALUES ( #{id}, #{name}, #{categoriesId}, #{optionsId}, #{price}, #{description}, #{productImg} , #{seq} )
    </insert>
        <!-- 추천메뉴 체크시 추천메뉴 등록 [reson 컬럼은 차후에]-->
        <insert id="insertRecommend">
            INSERT INTO RECOMMENDED_PRODUCTS (ID, PRODUCTS_ID )
            VALUES (UUID(), #{id} );
        </insert>
        <!-- 추천 메뉴 해제시 추천메뉴 삭제 -->
        <delete id="deleteRecommend">
            DELETE FROM RECOMMENDED_PRODUCTS
            WHERE PRODUCTS_ID = #{id}
        </delete>
    <!-- 수정 -->
    <update id="update">
        UPDATE products
           SET name = #{name}
              ,categories_id = #{categoriesId}
              ,options_id = #{optionsId}
              ,price = #{price}
              ,description = #{description}
              ,stock_check = #{stockCheck}
              ,product_img = #{productImg}
              ,seq = #{seq}
              ,updated_at = now()
        WHERE id = #{id}
    </update>

    <!-- 삭제 -->
    <delete id="delete">
        DELETE FROM products
        WHERE id = #{id}
    </delete>

    <update id="updateProductOrder" parameterType="map">
        UPDATE products
        SET seq = #{seq}
        WHERE id = #{id}
    </update>
</mapper>