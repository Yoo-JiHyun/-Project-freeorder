<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aloha.freeorder.mapper.PaymentMapper">
    <resultMap type="Payment" id="paymentMap">
        <id property="id" column="id" />

        <result property="id" column="id" />
        <result property="ordersId" column="ORDERS_ID" />
        <result property="paymentKey" column="PAYMENT_KEY" />
        <result property="paymentMethod" column="PAYMENT_METHOD" />
        <result property="status" column="STATUS" />
        <result property="paidAt" column="PAID_AT" />
        <result property="createdAt" column="CREATED_AT" />
        <result property="updatedAt" column="UPDATED_AT" />

        <association property="order" javaType="Order">
            <result property="id" column="orders_id" />
            <result property="type" column="order_type" />
            <result property="orderNumber" column="order_number" />
            <result property="usersId" column="users_id" />
            <result property="title" column="title" />
            <result property="totalQuantity" column="total_quantity" />
            <result property="totalCount" column="total_count" />
            <result property="totalPrice" column="total_price" />
            <result property="status" column="status" />
            <result property="orderedAt" column="ordered_at" />
            <result property="createdAt" column="created_at" />
            <result property="updatedAt" column="updated_at" />
            
            <collection property="itemList" resultMap="itemMap"></collection>
        </association>
    </resultMap>

    <resultMap type="OrderItem" id="itemMap">
        <result property="id" column="order_items_id" />
        <result property="ordersId" column="orders_id" />
        <result property="productsId" column="products_id" />
        <result property="name" column="name" />
        <result property="quantity" column="quantity" />
        <result property="price" column="price" />
        <result property="amount" column="amount" />

        <collection property="optionList" resultMap="optionMap"></collection>
    </resultMap>

    <resultMap type="OrderOption" id="optionMap">
        <result property="id" column="order_options_id" />
        <result property="optionItemsId" column="option_items_id" />
        <result property="name" column="options_name" />
        <result property="price" column="options_price" />
    </resultMap>


    <!-- 조회 - id -->
    <select id="select" resultMap="paymentMap">
        SELECT p.*
              ,o.TOTAL_PRICE
              ,o.TYPE as order_type
              ,o.TITLE
              ,o.ORDER_NUMBER
              ,o.STATUS
              ,oi.id as order_items_id
              ,oi.products_id
              ,oi.name
              ,oi.quantity
              ,oi.price
              ,oi.amount
              ,op.id as order_options_id
              ,op.option_items_id
              ,op.name as options_name
              ,op.price as options_price
        FROM payments p 
        LEFT JOIN orders o
            ON p.orders_id = o.id
        LEFT OUTER JOIN order_items oi
            ON o.id = oi.orders_id
        LEFT OUTER JOIN order_options op
            ON oi.id = op.order_items_id
        WHERE p.id = #{id}
    </select>

    <!-- 목록 조회 -->
    <select id="list" resultMap="paymentMap">
        SELECT p.*
              ,o.TOTAL_PRICE
              ,o.TITLE
              ,o.ORDER_NUMBER
              ,o.STATUS
              ,oi.id as order_items_id
              ,oi.products_id
              ,oi.name
              ,oi.quantity
              ,oi.price
              ,oi.amount
              ,op.id as order_options_id
              ,op.option_items_id
              ,op.name as options_name
              ,op.price as options_price
        FROM payments p 
        LEFT JOIN orders o
            ON p.orders_id = o.id
        LEFT OUTER JOIN order_items oi
            ON o.id = oi.orders_id
        LEFT OUTER JOIN order_options op
            ON oi.id = op.order_items_id
        ORDER BY p.created_at desc
    </select>

    <!-- 목록 조회 -->
    <select id="listByOption" resultMap="paymentMap">
        SELECT 
            p.*
            , o.TOTAL_PRICE
            , o.TITLE
            , o.ORDER_NUMBER
            , o.STATUS
            , oi.id as order_items_id
            , oi.products_id
            , oi.name
            , oi.quantity
            , oi.price
            , oi.amount
            , op.id as order_options_id
            , op.option_items_id
            , op.name as options_name
            , op.price as options_price
        FROM payments p 
        LEFT JOIN orders o
            ON p.orders_id = o.id
        LEFT OUTER JOIN order_items oi
            ON o.id = oi.orders_id
        LEFT OUTER JOIN order_options op
            ON oi.id = op.order_items_id
        WHERE 1
        <!-- <if test="filter.startDay != null and filter.endDay != null">
            AND p.created_at BETWEEN #{filter.startDay} AND #{filter.endDay}
        </if> -->
        <if test="filter.paymentMethods != null and !filter.paymentMethods.isEmpty()">
            AND p.payment_method = #{filter.paymentMethods}
        </if>
        <if test="filter.minPrice != null and !filter.minPrice.isEmpty()">
            AND o.TOTAL_PRICE >= #{filter.minPrice}
        </if>
        <if test="filter.maxPrice != null and !filter.maxPrice.isEmpty()">
            AND #{filter.maxPrice} >= o.TOTAL_PRICE  
        </if>
        ORDER BY p.created_at DESC
    </select>

    <!-- 등록 -->
    <insert id="insert">
        INSERT INTO payments ( id, orders_id, payment_key, payment_method, status )
        VALUES ( #{id}, #{ordersId}, #{paymentKey}, #{paymentMethod}, #{status} )
    </insert>

    <!-- 수정 -->
    <update id="updatePaymentStatus">
        UPDATE payments
           SET orders_id = ${ordersId}
              ,payment_method = ${paymentMethod}
              ,status = ${status}
              ,updated_at = now()
        WHERE id = #{id}
    </update>

    <!-- 삭제 -->
    <delete id="delete">
        DELETE FROM payments
        WHERE id = #{id}
    </delete>
</mapper>